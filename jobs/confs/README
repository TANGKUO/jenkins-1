This directory contains all the files needed to generate the jobs for the
jenkins-ovirt.org jenkins instance.

It's organized in directories, being the first level to separate between complete
yaml files and other files to be included inside the jobs.

The complete yaml files are inside the 'yaml' directory, and for each type of
files to be included (shell-scripts, groovy-scripts, yaml-scripts, ...) there
should be a directory with their name on that same level.

Inside the yaml dir, there will be another level separating theyamls by type,
and one dir for the jobs, job-templates and projects themselves (all that is
very likely to change to adapt the current needs)

An example of a possible layout:

  ./
   |-yaml
   | |-builders
   | | |-rpm_mock_builder.yaml
   | | \-default_rpm_builder.yaml
   | |-jobs
   | | \-mycustomjob.yaml
   | ...
   |-shell-scripts
   |  |-cleanup_vdsm.sh
   |  |-build_rpm.sh
   |  ...
   |-groovy-scripts
   |  |-check_vdsm_functional_tests.groovy
   |   ...
   ...


NOTE: You need a patched version of the jenkins-job-builder project, with the
[parallelization patch] and the [empty vars patch].

[parallelization patch] https://review.openstack.org/#/c/75514
[empty vars patch] https://review.openstack.org/#/c/101580

You can find a packaged version of the tool in out [ci-tools repo].

    [ci-tools repo] http://resources.ovirt.org/repos/ci-tools

A recommended configuration file for oVirt would be something like:

    $ cat ~/.jenkinsjobsrc
    [jenkins]
    user=youruser
    password=longapikeyfromjenkins
    url=http://jenkins.ovirt.org
    
    [job_builder]
    keep_descriptions=True
    recursive=True


**NOTE**: Make sure you are at this same level (`jobs/confs`) when running
jenkins-job builder or that you have this directory in the include patch for
the scripts (see the [openstack page] for more info).

**NOTE**: Make sure you specify the --conf option or that you have your config
at `/etc/jenkins_jobs/jenkins_jobs.ini`

To test:

  > jenkins-jobs --workers 0 -l debug --conf path/to/my/config \
  >     test -o path/for/output/dir --recursive yaml


To update:

  > jenkins-jobs --workers 0 -l debug --conf path/to/my/config \
  >     update --recursive yaml


You can also test/update just a set of jobs using glob syntax:

  > jenkins-jobs --workers 0 -l debug --conf path/to/my/config \
  >     update --recursive yaml \
  >     vdsm*master*merged


More info about jenkins job builder at the [openstack page]

    [openstack page] http://ci.openstack.org/jenkins_jobs.html
