- job-template: &standard-template-basic
    name: 'standard-template-basic'
    node: '{node-filter}'
    parameters:
      - gerrit-params:
          branch: '{branch}'
    concurrent: true
    properties:
        - throttle:
            max-per-node: 1
            max-total: 3
            option: project
        - build-discarder:
            num-to-keep: 40
            artifact-num-to-keep: 20
    scm:
      - '{project}-gerrit':
          git-server: '{git-server}'
      # Non-gerrit scm, me have to specify the branch
      - jenkins:
          branch: master
          git-server: '{git-server}'
    triggers:
      - '{stage}_trigger_{trigger}':
          project: '{project}'
          branch: '{branch}'
          trigger-times: '{trigger-times}'
          gerrit-server: '{gerrit-server}'

- job-template: &standard-template
      <<: *standard-template-basic
      name: '{project}_{version}_{stage}-{distro}-{arch}'
      scm:
        - '{project}-gerrit':
            git-server: '{git-server}'
        # Non-gerrit scm, we have to specify the branch
        - jenkins:
            branch: master
            git-server: '{git-server}'
      builders:
        - cleanup-slave
        - '{stage}_builder':
            project: '{project}'
            distro: '{distro}'
            arch: '{arch}'
            extra-env: '{extra-env}'
            cherry-pick: '{cherry-pick}'
      publishers:
        - mock-cleanup
        - exported-artifacts
        - html-reports

- job-template:
    <<: *standard-template
    name: 'ovirt-appliance_{version}_{stage}-{distro}-{arch}'
    logrotate:
      numToKeep: 20
      artifactNumToKeep: 2

- job-template:
    <<: *standard-template
    name: 'ovirt-engine_{version}_build-artifacts-{distro}-{arch}'
    logrotate:
      numToKeep: 40
      artifactNumToKeep: 10

# the following templates are for the new pipeline jobs
- job-template: &standard-pipeline
    <<: *standard-template-basic
    name: '{project}_{version}_{stage}-pipeline'
    project-type: workflow
    dsl: !include-raw: groovy-scripts/standard-pipeline.groovy
    properties:
        - build-discarder:
            num-to-keep: 40
            artifact-num-to-keep: 20

- job-template:
    name: '{project}_{version}_deploy-to-{reponame}-snapshot'
    node: '{node-filter}'
    parameters:
      - string:
          name: BUILD_ID
          default: ''
          description: |
            Id of this build, will be also the suffix of the snapshot repo created
      - string:
          name: BUILD_ARTIFACTS_JOBS
          default: ''
          description: |
            Comma separated list of jobs to deploy to {reponame} snapshot repo
    builders:
      - shell: |
          jobs=(${{BUILD_ARTIFACTS_JOBS//,/ }})
          for line in "repo-suffix:.$BUILD_ID" "${{jobs[@]}}"; do
              echo "$line"
          done \
          | ssh \
              -o StrictHostKeyChecking=no \
              deploy-{reponame}-snapshot@resources.ovirt.org
    wrappers:
      - ssh-agent-credentials:
          users:
            - b76f2120-1f78-44b3-918e-2d7c5df9ed6e


## lago specific jobs, because it's using github not gerrit
- lago-common: &lago-common
    name: lago-common
    properties:
      - github:
          url: 'https://github.com/{org}/{project}'
    scm:
      - 'github-pull':
          project: '{project}'
          org: '{org}'
      - jenkins:
          branch: master
          git-server: '{git-server}'
    parameters:

- job-template:
    <<: *standard-template
    <<: *lago-common
    name: 'lago_{version}_check-patch-{distro}-{arch}'
    triggers:
      - github-pull-check-patch:
          project: '{project}'
          org: '{org}'
          branch: '{branch}'
          distro: '{distro}'
          arch: '{arch}'

- job-template:
    <<: *standard-template
    <<: *lago-common
    name: 'lago_{version}_{stage}-{distro}-{arch}'
    scm:
      - 'github':
          project: '{project}'
          org: '{org}'
          branch: '{branch}'
      - jenkins:
          branch: master
          git-server: '{git-server}'
    triggers:
      - dummy-trigger:
          project: '{project}'
          branch: '{branch}'

- job-template:
    <<: *standard-pipeline
    <<: *lago-common
    name: 'lago_{version}_{stage}-pipeline'
    triggers:
      - dummy-trigger:
          project: '{project}'
          branch: '{branch}'

# This is needed because workflow/pipeline jobs don't support github
# trigger yet
- job-template:
    <<: *standard-template
    <<: *lago-common
    name: 'lago_{version}_{stage}-trigger'
    concurrent: false
    triggers:
      - github-pull-check-merged:
          project: '{project}'
          org: '{org}'
          branch: '{branch}'
          distro: '{distro}'
          arch: '{arch}'
    scm:
      - 'github':
          project: '{project}'
          org: '{org}'
          branch: '{branch}'
    builders:
      - trigger-builds:
          - project: 'lago_{version}_{stage}-pipeline'
            current-parameters: true
            block: true
    publishers:
      - github-pull-request-merge:
          only-admins-merge: true
          disallow-own-code: false
          fail-on-non-merge: true
          delete-on-merge: true
